# Plot vertical segment lines for milestones
timeline_plot<-timeline_plot+geom_segment(data=sequencing, aes(y=position,yend=0,xend=Year), color='#CBBEB5', size=0.2)
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# Don't show axes, appropriately position legend
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Show text for each month
timeline_plot<-timeline_plot+geom_text(data=sequencing, aes(x=Year,y=-0.1,label=Year),size=5,vjust=0.5, color='black', angle=90)
#timeline_plot<-timeline_plot+geom_text(data=year_df, aes(x=Year,y=-0.2,label=Year, fontface="bold"),size=2.5, color='black')
# Show text for each milestone
plot <-timeline_plot+geom_text(aes(y=text_position,label=stringr::str_wrap(Milestone, width = 18)),size=5) + theme(legend.position = "none") + labs(title="Day 3: Historical. \nDevelopments in DNA sequencing.", subtitle = "#30DayChartChallenge | @agalanis97", caption = "Data: Heather and Chain (2016)")
plot
sequencing <- read.csv("sequencing.csv")
status_levels <- c("Initial", "Major", "Breakthrough")
status_colors <- brewer.pal(n = 3, name = "Dark2")
sequencing$Status <- factor(sequencing$Status, levels=status_levels, ordered=TRUE)
positions <- c(0.2, 0.15, 0.4, 0.65, 0.3)
sequencing$text_position <- c(0.3,0.25,0.5,0.8,0.4)
timeline_plot<-ggplot(sequencing,aes(x=Year,y=0, col=Status, label=Milestone))
timeline_plot<-timeline_plot+labs(col="Milestones")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Plot horizontal black line for timeline
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3) + xlim(1945,2020) + ylim(-0.5,1)
# Plot vertical segment lines for milestones
timeline_plot<-timeline_plot+geom_segment(data=sequencing, aes(y=position,yend=0,xend=Year), color='#CBBEB5', size=0.2)
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# Don't show axes, appropriately position legend
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Show text for each month
timeline_plot<-timeline_plot+geom_text(data=sequencing, aes(x=Year,y=-0.1,label=Year),size=5,vjust=0.5, color='black', angle=90)
# Show text for each milestone
plot <-timeline_plot+geom_text(aes(y=text_position,label=stringr::str_wrap(Milestone, width = 18)),size=5) + theme(legend.position = "none") + labs(title="Day 3: Historical. \nDevelopments in DNA sequencing.", subtitle = "#30DayChartChallenge | @agalanis97", caption = "Data: Heather and Chain (2016)")
plot
sequencing <- read.csv("sequencing.csv")
status_levels <- c("Initial", "Major", "Breakthrough")
status_colors <- brewer.pal(n = 3, name = "Dark2")
sequencing$Status <- factor(sequencing$Status, levels=status_levels, ordered=TRUE)
positions <- c(0.2, 0.15, 0.4, 0.65, 0.3)
sequencing$text_position <- c(0.3,0.25,0.5,0.8,0.4)
sequencing$position <- c(0.2, 0.15, 0.4, 0.65, 0.3)
sequencing$text_position <- c(0.3,0.25,0.5,0.8,0.4)
timeline_plot<-ggplot(sequencing,aes(x=Year,y=0, col=Status, label=Milestone))
timeline_plot<-timeline_plot+labs(col="Milestones")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Plot horizontal black line for timeline
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3) + xlim(1945,2020) + ylim(-0.5,1)
# Plot vertical segment lines for milestones
timeline_plot<-timeline_plot+geom_segment(data=sequencing, aes(y=position,yend=0,xend=Year), color='#CBBEB5', size=0.2)
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# Don't show axes, appropriately position legend
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Show text for each month
timeline_plot<-timeline_plot+geom_text(data=sequencing, aes(x=Year,y=-0.1,label=Year),size=5,vjust=0.5, color='black', angle=90)
# Show text for each milestone
plot <-timeline_plot+geom_text(aes(y=text_position,label=stringr::str_wrap(Milestone, width = 18)),size=5) + theme(legend.position = "none") + labs(title="Day 3: Historical. \nDevelopments in DNA sequencing.", subtitle = "#30DayChartChallenge | @agalanis97", caption = "Data: Heather and Chain (2016)")
plot
# Show text for each milestone
plot <-timeline_plot+geom_text(aes(y=text_position,label=stringr::str_wrap(Milestone, width = 18)),size=5) + theme(legend.position = "none") + labs(title="Day 3: Historical. \nDevelopments in DNA sequencing.", subtitle = "#30DayChartChallenge | @agalanis97", caption = "Data: Heather and Chain (2016)")
plot
ggsave(plot = plot, filename = "day3.pdf", width = 10, height = 10)
ggsave(plot = plot, filename = "day3.pdf")
library(waffle)
data1 <- data.frame(
parts = c("Migrants and Refugees","Ethnic group","Jew or Muslim","LGBTQIA+"),
vals = c(51,2,3,44),
col = c("blue", "black", "red", "green"))
waffle(data1, rows = 5)
data1 <- data.frame(
parts = c("Unprotected","Protected"),
vals = c(51,2,3,44),
col = c("brown", "green"))
data1 <- data.frame(
parts = c("Unprotected","Protected"),
vals = c(62,28),
col = c("brown", "green"))
waffle(data1, rows = 5)
data1 <- data.frame(
parts = c("Unprotected","Protected"),
vals = c(62,28),
col = c("green", "brown"))
waffle(data1, rows = 5)
data1 <- data.frame(
parts = c("Unprotected","Protected"),
vals = c(62,28),
col = c("green", "black"))
data1 <- data.frame(
data1 <- data.frame(
parts = c("Unprotected","Protected","Unprotected","Protected"),
vals = c(62,28,100,0),
col = c("green", "black"),
fct = c(rep("Up to May 2020", 2), rep("Since May 2020", 3)))
data1 <- data.frame(
parts = c("Unprotected","Protected","Unprotected","Protected"),
vals = c(62,28,100,0),
col = c("green", "black", "green","black),
fct = c(rep("Up to May 2020", 2), rep("Since May 2020", 3)))
xdf %>%
count(parts, wt = vals) %>%
ggplot(aes(fill = parts, values = n)) +
geom_waffle(n_rows = 20, size = 0.33, colour = "white", flip = TRUE) +
scale_fill_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
data1 <- data.frame(
parts = c("Unprotected","Protected","Unprotected","Protected"),
vals = c(62,28,100,0),
col = c("green", "black", "green","black"),
fct = c(rep("Up to May 2020", 2), rep("Since May 2020", 3)))
data1 <- data.frame(
parts = c("Unprotected","Protected","Unprotected","Protected"),
vals = c(62,28,100,0),
col = c("green", "black", "green","black"),
fct = c(rep("Up to May 2020", 2), rep("Since May 2020", 2)))
data1 %>%
count(parts, wt = vals) %>%
ggplot(aes(fill = parts, values = n)) +
geom_waffle(n_rows = 20, size = 0.33, colour = "white", flip = TRUE) +
scale_fill_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
library(dplyr)
data1 %>%
count(parts, wt = vals) %>%
ggplot(aes(fill = parts, values = n)) +
geom_waffle(n_rows = 20, size = 0.33, colour = "white", flip = TRUE) +
scale_fill_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
data1 %>%
count(parts, wt = vals) %>%
ggplot(aes(fill = parts, values = n)) +
geom_waffle(n_rows = 20, size = 0.33, colour = "white", flip = TRUE) + facet_wrap(~fct, ncol=1) +
scale_fill_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
data1 <- data.frame(
parts = c("Unprotected","Protected","Unprotected","Protected"),
vals = c(62,28,100,0),
col = c("green", "black", "green","black"),
fct = c(rep("Up to May 2020", 2), rep("Since May 2020", 2)))
data1 %>%
count(parts, wt = vals) %>%
ggplot(aes(fill = parts, values = n)) +
geom_waffle(n_rows = 20, size = 0.33, colour = "white", flip = TRUE) + facet_wrap(~fct, ncol=1) +
scale_fill_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
View(data1)
tibble(
parts = factor(rep(month.abb[1:3], 3), levels=month.abb[1:3]),
values = c(10, 20, 30, 6, 14, 40, 30, 20, 10),
fct = c(rep("Thing 1", 3), rep("Thing 2", 3), rep("Thing 3", 3))
) -> xdf
View(xdf)
ggplot(xdf, aes(fill=parts, values=values)) +
geom_waffle(color = "white", size=1.125, n_rows = 6) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
ggthemes::scale_fill_tableau(name=NULL) +
coord_equal() +
labs(
title = "Faceted Waffle Geoms"
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
library(hrbrthemes)
ggplot(xdf, aes(fill=parts, values=values)) +
geom_waffle(color = "white", size=1.125, n_rows = 6) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
ggthemes::scale_fill_tableau(name=NULL) +
coord_equal() +
labs(
title = "Faceted Waffle Geoms"
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
ggplot(xdf, aes(fill=parts, values=values)) +
geom_waffle(color = "white", size=1.125, n_rows = 6) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = "Faceted Waffle Geoms"
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
ggplot(data1, aes(fill=parts, values=values)) +
geom_waffle(color = "white", size=1.125, n_rows = 6) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = "Faceted Waffle Geoms"
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 6) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = "Faceted Waffle Geoms"
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
View(xdf)
data1 <- data.frame(
parts = c("Unprotected","Protected","Unprotected","Protected"),
vals = c(72,28,100,0),
col = c("green", "black", "green","black"),
fct = c(rep("Up to May 2020", 2), rep("Since May 2020", 2)))
ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
fonts()
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
plot
library(ggpubr)
img.file <- system.file("skouries-21.jpg"),
package = "ggpubr")
img.file <- system.file("skouries-21.jpg"), package = "ggpubr")
img.file <- system.file("skouries-21.jpg", package = "ggpubr")
img <- png::readPNG(img.file)
if (!require('jpeg')) install.packages('jpeg'): library('jpeg')
img <- jpeg::readJPEG(img.file)
img.file <- system.file("skouries_21.jpg", package = "ggpubr")
img <- jpeg::readJPEG(img.file)
?system.file
here()
here("skouries_21.jpg")
img.file <- system.file(here("skouries_21.jpg"), package = "ggpubr")
img <- jpeg::readJPEG(img.file)
img.file <- system.file(here("skouries_21.jpg"), package = "ggpubr")
?readJPEG
img <- jpeg::readJPEG(here("skouries_21.jpg"))
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) + background_image(img) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
plot
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
plot
plot2 <- plot + background_image(img)
plot2
plot
plot <- ggplot(data1, aes(fill=parts, values=vals)) + background_image(img) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
plot
g_pic <- rasterGrob(image = img,
interpolate = TRUE)
library(grid)
g_pic <- rasterGrob(image = img,
interpolate = TRUE)
plot <- ggplot(data1, aes(fill=parts, values=vals)) + annotation_custom(grob = g_pic) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
plot
plot <- ggplot(data1, aes(fill=parts, values=vals)) + annotation_custom(grob = g_pic)
plot
plot <- ggplot(data1, aes(fill=parts, values=vals)) + annotation_custom(grob = g_pic) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
)
plot
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
plot
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_rc(grid="")
plot
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum(grid="") +
theme_enhance_waffle()
plot
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_ps(grid="") +
theme_enhance_waffle()
plot
library(extrafont)
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_ps(grid="") +
theme_enhance_waffle()
plot
windowsFonts()
font_import()
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_ps(grid="") +
theme_enhance_waffle()
plot
fonts()
theme_ipsum_tw()
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_tw(grid="") +
theme_enhance_waffle()
plot
dev.off()
dev.off()
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_tw(grid="") +
theme_enhance_waffle()
plot
extrafont::loadfonts(device="win")
plot <- ggplot(data1, aes(fill=parts, values=vals)) +
geom_waffle(color = "white", size=1.125, n_rows = 5) +
facet_wrap(~fct, ncol=1) +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
coord_equal() +
labs(
title = ""
) +
theme_ipsum_tw(grid="") +
theme_enhance_waffle()
plot
